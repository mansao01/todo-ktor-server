openapi: "3.1.0"
info:
  title: "todo_ktor API"
  description: "todo_ktor API"
  version: "1.0.0"
servers:
- url: "https://todo_ktor"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Hello World!"
  /todo:
    post:
      description: ""
  /todo/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
  /todos:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Todo"
              examples:
                Example#1:
                  description: ""
                  value:
                  - id: 1
                    title: "Kotlin"
                    done: true
                  - id: 1
                    title: "Compose"
                    done: true
  /json/kotlinx-serialization:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
components:
  schemas:
    Todo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        title:
          type: "string"
        done:
          type: "boolean"
      required:
      - "title"
    Map:
      type: "object"
      properties: {}
    Map_String:
      type: "string"